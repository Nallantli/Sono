load "graphics.so";
load "vector.so";

var SIZE_X = 30;
var SIZE_Y = 30;
var SIZE_SQUARE = 15;
var speed = 80;
var direction;
var newDir;
var posX;
var posY;
var size;
var LOST;

var window = new Window("Snake Game", SIZE_X * SIZE_SQUARE, SIZE_Y * SIZE_SQUARE, exit);
var graphics = window.getGraphics();

var valueArray = alloc(SIZE_X, SIZE_Y);
var shapeArray = alloc(SIZE_X, SIZE_Y);

x in {0 until SIZE_X} do {
	y in {0 until SIZE_Y} do {
		shapeArray[x][y] = graphics.add(new Shape.Rectangle(Color.BLACK, null, x * SIZE_SQUARE, y * SIZE_SQUARE, SIZE_SQUARE, SIZE_SQUARE));
	}
}

window.onKeyPress((event) => {
	event.charStr switch {
		"W" goto {
			direction != 2 then {
				newDir = 3;
			}
		}
		"S" goto {
			direction != 3 then {
				newDir = 2;
			}
		}
		"A" goto {
			direction != 0 then {
				newDir = 1;
			}
		}
		"D" goto {
			direction != 1 then {
				newDir = 0;
			}
		}
		"1" goto speed = 160;
		"2" goto speed = 120;
		"3" goto speed = 80;
		"4" goto speed = 0;
		"Space" goto reset();
	}
});

setApple() => {
	var x;
	var y;
	true do {
		x = Random.int(0, SIZE_X);
		y = Random.int(0, SIZE_Y);
		valueArray[x][y] == 0 then break;
	}
	valueArray[x][y] = -1;
}

refresh() => {
	!LOST then {
		direction = newDir;

		direction switch {
			0 goto posX = (posX + 1 + SIZE_X) % SIZE_X;
			1 goto posX = (posX - 1 + SIZE_X) % SIZE_X;
			2 goto posY = (posY + 1 + SIZE_Y) % SIZE_Y;
			3 goto posY = (posY - 1 + SIZE_Y) % SIZE_Y;
		}

		valueArray[posX][posY] == -1 then {
			size += 1;
			setApple();
		} else valueArray[posX][posY] > 0 then {
			LOST = true;
			println("You Lost!");
		}

		valueArray[posX][posY] = size;
	}

	x in {0 until SIZE_X} do {
		y in {0 until SIZE_Y} do {
			valueArray[x][y] > 0 then {
				shapeArray[x][y].setFill(Color.GREEN);
			} else valueArray[x][y] < 0 then {
				shapeArray[x][y].setFill(Color.RED);
			} else {
				shapeArray[x][y].setFill(Color.BLACK);
			}
		}
	}

	x in valueArray do {
		y in x do {
			y > 0 then {
				y -= 1;
			}
		}
	}

	window.repaint();
}

reset() => {
	LOST = false;
	direction = 0;
	newDir = 0;
	posX = 5;
	posY = 5;
	size = 1;
	valueArray.set(0);
	setApple();
}

reset();

var start = timeMS();
true do {
	var lapse = timeMS() - start;
	lapse > speed then {
		start = timeMS();
		refresh();
	}
}