load "graphics.so";
load "system.so";
load "math.so";

var SIZE_X = 60;
var SIZE_Y = 60;

var valueArray = alloc {SIZE_X, SIZE_Y};
var shapeArray = alloc {SIZE_X, SIZE_Y};

var paused = true;

x in {0 until SIZE_X} do {
	y in {0 until SIZE_Y} do {
		valueArray[x][y] = Random.float() >= 0.5;
	}
}

var window = new Window("Conway's Game of Life", SIZE_X * 10, SIZE_Y * 10, () => {
	println("Kind regards to the late John Conway");
	exit();
});
var graphics = window.getGraphics();

window.onKeyRelease((event) => {
	event.charStr == "Space" then {
		paused = !paused;
	}
});

window.onMousePress((event) => {
	paused then {
		valueArray[(event.x / 10).floor()][(event.y / 10).floor()] = true;
	}
});

window.onMouseDrag((event) => {
	paused then {
		valueArray[(event.x / 10).floor()][(event.y / 10).floor()] = true;
	}
});

x in {0 until SIZE_X} do {
	y in {0 until SIZE_Y} do {
		shapeArray[x][y] = graphics.add(new Shape.Rectangle(Color.WHITE, null, x * 10, y * 10, 10, 10));
	}
}

neighborCount(final x, final y) => {
	var c = 0;
	valueArray[(x + SIZE_X + 1) % SIZE_X][y] then c += 1;
	valueArray[(x + SIZE_X - 1) % SIZE_X][y] then c += 1;
	valueArray[x][(y + SIZE_Y + 1) % SIZE_Y] then c += 1;
	valueArray[x][(y + SIZE_Y - 1) % SIZE_Y] then c += 1;
	valueArray[(x + SIZE_X + 1) % SIZE_X][(y + SIZE_Y + 1) % SIZE_Y] then c += 1;
	valueArray[(x + SIZE_X + 1) % SIZE_X][(y + SIZE_Y - 1) % SIZE_Y] then c += 1;
	valueArray[(x + SIZE_X - 1) % SIZE_X][(y + SIZE_Y + 1) % SIZE_Y] then c += 1;
	valueArray[(x + SIZE_X - 1) % SIZE_X][(y + SIZE_Y - 1) % SIZE_Y] then c += 1;
	return c;
}

refresh() => {
	x in {0 until SIZE_X} do {
		y in {0 until SIZE_Y} do {
			valueArray[x][y] then {
				shapeArray[x][y].setFill(Color.BLACK);
			} else {
				shapeArray[x][y].setFill(Color.WHITE);
			}
		}
	}
	paused == false then {
		var newValueArray = alloc {SIZE_X, SIZE_Y};
		x in {0 until SIZE_X} do {
			y in {0 until SIZE_Y} do {
				var c = neighborCount(x, y);
				valueArray[x][y] then {
					newValueArray[x][y] = c == 2 || c == 3;
				} else {
					newValueArray[x][y] = c == 3;
				}
			}
		}
		valueArray = newValueArray;
	}
	window.repaint();
}

var start = timeMS();
true do {
	var lapse = timeMS() - start;
	lapse > 60 then {
		start = timeMS();
		refresh();
	}
}