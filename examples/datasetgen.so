load "dataset.so";
load "rule.so";
load "vector.so";
load "system.so";
load "string.so";
load "html.so";

var dataset = new DataSet();

# Alternatively: JPN.txt, LAT.txt, NAH.txt
# Not guaranteed to be reflective of actual words, the datasets just contain possible combinations
dataset.parseFile("misc/Test.txt");
dataset.setRules(RuleSets.Common.randomize());

var morphemeB = dataset.genSyllable();
var morphemeC = dataset.genSyllable();

var header = {"Form A", "Form B+A", "Form A+C", "Form B+A+C", "Form A+A"};
var vector = {};
i in {0 until 20} do {
	var w = dataset.genWord();
	var wA = (str dataset.toPhonetic(w)).replace("[\\.\\+]", "");
	var wBA = (str dataset.toPhonetic(word (vec morphemeB + { "+" } + vec w))).replace("[\\.\\+]", "");
	var wAC = (str dataset.toPhonetic(word (vec w + { "+" } + vec morphemeC))).replace("[\\.\\+]", "");
	var wBAC = (str dataset.toPhonetic(word (vec morphemeB + { "+" } + vec w + { "+" } + vec morphemeC))).replace("[\\.\\+]", "");
	var wAA = (str dataset.toPhonetic(word (vec w + { "+" } + vec w))).replace("[\\.\\+]", "");
	vector += {{wA, wBA, wAC, wBAC, wAA}};
}

print(Format.table(header, vector));